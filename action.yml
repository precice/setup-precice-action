name: 'Build preCICE'
description: 'Installs preCICE in the given prefix and adds it to the path.'

inputs:
  precice-version:
    required: true
    default: 'develop'
    description: 'The version of preCICE to use. Can be a branch or tag or SHA. Defaults to `develop`'
  build-tests:
    required: false
    default: 'OFF'
    description: 'Whether to build tests. Default is `OFF`'
  install-prefix:
    required: false
    default: '$HOME/precice'
    description: 'The installation prefix for preCICE. Default is `$HOME/precice`'

runs:
  using: "composite"
  steps: 

    - name: check for release # if the version is a release, install from prebuilt binaries
      id: check
      shell: bash
      run: |
        if [[ ${{ inputs.precice-version }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "release=true" >> $GITHUB_OUTPUT
        else
          echo "release=false" >> $GITHUB_OUTPUT
        fi

    - name: install prebuilt binaries
      if: steps.check.outputs.release == 'true'
      shell: bash
      run: |
        CMD=$([ "$(id -u)" -ne 0 ] && echo "sudo" || echo "")

        $CMD apt update
        $CMD apt install -y wget
        VERSION=${{ inputs.precice-version }}
        MAJORVERSION=${VERSION:1:1}
        wget https://github.com/precice/precice/releases/download/${VERSION}/libprecice${MAJORVERSION}_${VERSION#v}_$(lsb_release -cs).deb
        $CMD apt install -y ./libprecice${MAJORVERSION}_${VERSION#v}_$(lsb_release -cs).deb
        rm libprecice${MAJORVERSION}_${VERSION#v}_$(lsb_release -cs).deb
    
    - name: Get preCICE version hash
      if: steps.check.outputs.release == 'false'
      id: get-hash
      shell: bash
      run: |
        echo "precice-hash=$(git ls-remote --exit-code --heads https://github.com/precice/precice.git ${{ inputs.precice-version }} | awk '{print $1}')" >> $GITHUB_OUTPUT

    - name: cache preCICE
      id: cache
      if: steps.check.outputs.release == 'false'
      uses: actions/cache@v3
      with:
        path: ${{ inputs.install-prefix }}
        key: ${{ runner.os }}-precice-${{ steps.get-hash.outputs.precice-hash }}
        restore-keys: |
          ${{ runner.os }}-precice-${{ steps.get-hash.outputs.precice-hash }}
    
    - name: debug
      if: steps.check.outputs.release == 'false'
      shell: bash
      run: |
        echo "cache-hit=${{ steps.cache.outputs.cache-hit }}"
        echo "precice-hash=${{ steps.get-hash.outputs.precice-hash }}"
        echo "precice-version=${{ inputs.precice-version }}"
        echo "install-prefix=${{ inputs.install-prefix }}"

    - name: check out repository
      if: steps.check.outputs.release == 'false' && steps.cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: precice/precice
        ref: ${{ inputs.precice-version }}
        path: precice
      env: 
        GITHUB_WORKSPACE: $HOME
    
    - name: install dependencies
      if: steps.check.outputs.release == 'false' && steps.cache.outputs.cache-hit != 'true'
      run: |
        CMD=$([ "$(id -u)" -ne 0 ] && echo "sudo" || echo "")
        $CMD apt update
        $CMD apt install -y build-essential cmake libeigen3-dev libxml2-dev libboost-all-dev petsc-dev python3-dev python3-numpy
      shell: bash

    - name: Generate build directory
      if: steps.check.outputs.release == 'false' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      working-directory: precice
      env: 
        GITHUB_WORKSPACE: $HOME
      run: mkdir -p build

    - name: Show preCICE state
      if: steps.check.outputs.release == 'false' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      working-directory: precice
      run: git log -n 1

    - name: Configure
      if: steps.check.outputs.release == 'false' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      working-directory: precice/build
      env:
        GITHUB_WORKSPACE: $HOME
      run: |
        cmake --version
        cmake -DCMAKE_INSTALL_PREFIX=${{ inputs.install-prefix }} -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=${{ inputs.build-tests }} ..

    - name: Compile
      if: steps.check.outputs.release == 'false' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      working-directory: precice/build
      env:
        GITHUB_WORKSPACE: $HOME
      run: |
        make -j $(nproc)
        make install

    - name: Add to path
      if: steps.check.outputs.release == 'false' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "PATH=${{ inputs.install-prefix }}/bin:$PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${{ inputs.install-prefix }}/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=${{ inputs.install-prefix }}/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
        echo "CPATH=${{ inputs.install-prefix }}/include:$CPATH" >> $GITHUB_ENV
        echo "CMAKE_PREFIX_PATH=${{ inputs.install-prefix }}:$CMAKE_PREFIX_PATH" >> $GITHUB_ENV

    - name: More debugging
      if: steps.check.outputs.release == 'false' && steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        ls -l ${{ inputs.install-prefix }}

    - name: cache preCICE
      if: steps.check.outputs.release == 'false' && steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: ${{ inputs.install-prefix }}
        key: ${{ runner.os }}-precice-${{ steps.get-hash.outputs.precice-hash }}
